/*
цифра  Ч [0-9]
буква  Ч [A-Za-z_]
символ  Ч [^'\n]|''
- символ из двух кавычек обозначает одну кавычку
        многострочный_комментарий  Ч {[^}]*}
многострочный_комментарий  Ч \(\*[^(\*\))]*\*\)
строчный_комментарий  Ч //[^EOF\n]*[EOF\n]
пробельные символы  Ч [ \t\n\r]+
идентификатор  Ч {буква}({буква}|{цифра})*
число  Ч {цифра}+
шестнадцатеричное_число  Ч $[0-9A-Fa-f]+
экспонента  Ч [Ee][+-]?{число}
вещественное_число  Ч {число}\.{число}
вещественное_число  Ч {число}(\.{число})?{экспонента}
символьна€_литера  Ч '{символ}'
символьна€_литера  Ч #[{число}{шестнадцатеричное_число}]
строка  Ч '{символ}*'
*/
#include <sstream>
#include "Token.h"

using namespace std;

#include "Lexer.h"

int main()
{
	ofstream fout("output.txt", ios::trunc);
	Lexer myLexer("input.txt");
	for (Token i = myLexer.GetToken(); !i.null(); i = myLexer.GetToken())
	{
		i.PrintToken();
	}

	return 0;
}
